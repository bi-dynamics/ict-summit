"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-text_entry_js"],{

/***/ 7502:
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-text.entry.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ion_text: () => (/* binding */ Text)
/* harmony export */ });
/* harmony import */ var _index_36a5fd75_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-36a5fd75.js */ 78705);
/* harmony import */ var _theme_7670341c_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./theme-7670341c.js */ 51257);
/* harmony import */ var _ionic_global_a9abd569_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ionic-global-a9abd569.js */ 74771);
/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */



const textCss = ":host(.ion-color){color:var(--ion-color-base)}";
const Text = class {
  constructor(hostRef) {
    (0,_index_36a5fd75_js__WEBPACK_IMPORTED_MODULE_0__.r)(this, hostRef);
    this.color = undefined;
  }
  render() {
    const mode = (0,_ionic_global_a9abd569_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
    return (0,_index_36a5fd75_js__WEBPACK_IMPORTED_MODULE_0__.h)(_index_36a5fd75_js__WEBPACK_IMPORTED_MODULE_0__.H, {
      class: (0,_theme_7670341c_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.color, {
        [mode]: true
      })
    }, (0,_index_36a5fd75_js__WEBPACK_IMPORTED_MODULE_0__.h)("slot", null));
  }
};
Text.style = textCss;


/***/ }),

/***/ 51257:
/*!*************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/theme-7670341c.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c: () => (/* binding */ createColorClasses),
/* harmony export */   g: () => (/* binding */ getClassMap),
/* harmony export */   h: () => (/* binding */ hostContext),
/* harmony export */   o: () => (/* binding */ openURL)
/* harmony export */ });
/* harmony import */ var C_Users_Blessing_Kunaka_Desktop_mining_expo_mining_expo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 71670);

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */
const hostContext = (selector, el) => {
  return el.closest(selector) !== null;
};
/**
 * Create the mode and color classes for the component based on the classes passed in
 */
const createColorClasses = (color, cssClassMap) => {
  return typeof color === 'string' && color.length > 0 ? Object.assign({
    'ion-color': true,
    [`ion-color-${color}`]: true
  }, cssClassMap) : cssClassMap;
};
const getClassList = classes => {
  if (classes !== undefined) {
    const array = Array.isArray(classes) ? classes : classes.split(' ');
    return array.filter(c => c != null).map(c => c.trim()).filter(c => c !== '');
  }
  return [];
};
const getClassMap = classes => {
  const map = {};
  getClassList(classes).forEach(c => map[c] = true);
  return map;
};
const SCHEME = /^[a-z][a-z0-9+\-.]*:/;
const openURL = /*#__PURE__*/function () {
  var _ref = (0,C_Users_Blessing_Kunaka_Desktop_mining_expo_mining_expo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* (url, ev, direction, animation) {
    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {
      const router = document.querySelector('ion-router');
      if (router) {
        if (ev != null) {
          ev.preventDefault();
        }
        return router.push(url, direction, animation);
      }
    }
    return false;
  });
  return function openURL(_x, _x2, _x3, _x4) {
    return _ref.apply(this, arguments);
  };
}();


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXRleHRfZW50cnlfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUMwRTtBQUNaO0FBQ0Q7QUFFN0QsTUFBTVMsT0FBTyxHQUFHLGdEQUFnRDtBQUVoRSxNQUFNQyxJQUFJLEdBQUcsTUFBTTtFQUNqQkMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ25CWCxxREFBZ0IsQ0FBQyxJQUFJLEVBQUVXLE9BQU8sQ0FBQztJQUMvQixJQUFJLENBQUNDLEtBQUssR0FBR0MsU0FBUztFQUN4QjtFQUNBQyxNQUFNQSxDQUFBLEVBQUc7SUFDUCxNQUFNQyxJQUFJLEdBQUdSLDREQUFVLENBQUMsSUFBSSxDQUFDO0lBQzdCLE9BQVFOLHFEQUFDLENBQUNFLGlEQUFJLEVBQUU7TUFBRWEsS0FBSyxFQUFFWCxxREFBa0IsQ0FBQyxJQUFJLENBQUNPLEtBQUssRUFBRTtRQUNwRCxDQUFDRyxJQUFJLEdBQUc7TUFDVixDQUFDO0lBQUUsQ0FBQyxFQUFFZCxxREFBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztFQUMxQjtBQUNGLENBQUM7QUFDRFEsSUFBSSxDQUFDUSxLQUFLLEdBQUdULE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDckJwQjtBQUNBO0FBQ0E7QUFDQSxNQUFNVyxXQUFXLEdBQUdBLENBQUNDLFFBQVEsRUFBRUMsRUFBRSxLQUFLO0VBQ3BDLE9BQU9BLEVBQUUsQ0FBQ0MsT0FBTyxDQUFDRixRQUFRLENBQUMsS0FBSyxJQUFJO0FBQ3RDLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxNQUFNZixrQkFBa0IsR0FBR0EsQ0FBQ08sS0FBSyxFQUFFVyxXQUFXLEtBQUs7RUFDakQsT0FBTyxPQUFPWCxLQUFLLEtBQUssUUFBUSxJQUFJQSxLQUFLLENBQUNZLE1BQU0sR0FBRyxDQUFDLEdBQ2hEQyxNQUFNLENBQUNDLE1BQU0sQ0FBQztJQUFFLFdBQVcsRUFBRSxJQUFJO0lBQUUsQ0FBRSxhQUFZZCxLQUFNLEVBQUMsR0FBRztFQUFLLENBQUMsRUFBRVcsV0FBVyxDQUFDLEdBQUdBLFdBQVc7QUFDbkcsQ0FBQztBQUNELE1BQU1JLFlBQVksR0FBSUMsT0FBTyxJQUFLO0VBQ2hDLElBQUlBLE9BQU8sS0FBS2YsU0FBUyxFQUFFO0lBQ3pCLE1BQU1nQixLQUFLLEdBQUdDLEtBQUssQ0FBQ0MsT0FBTyxDQUFDSCxPQUFPLENBQUMsR0FBR0EsT0FBTyxHQUFHQSxPQUFPLENBQUNJLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDbkUsT0FBT0gsS0FBSyxDQUNUSSxNQUFNLENBQUU3QixDQUFDLElBQUtBLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FDeEI4QixHQUFHLENBQUU5QixDQUFDLElBQUtBLENBQUMsQ0FBQytCLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDcEJGLE1BQU0sQ0FBRTdCLENBQUMsSUFBS0EsQ0FBQyxLQUFLLEVBQUUsQ0FBQztFQUM1QjtFQUNBLE9BQU8sRUFBRTtBQUNYLENBQUM7QUFDRCxNQUFNZ0MsV0FBVyxHQUFJUixPQUFPLElBQUs7RUFDL0IsTUFBTU0sR0FBRyxHQUFHLENBQUMsQ0FBQztFQUNkUCxZQUFZLENBQUNDLE9BQU8sQ0FBQyxDQUFDUyxPQUFPLENBQUVqQyxDQUFDLElBQU04QixHQUFHLENBQUM5QixDQUFDLENBQUMsR0FBRyxJQUFLLENBQUM7RUFDckQsT0FBTzhCLEdBQUc7QUFDWixDQUFDO0FBQ0QsTUFBTUksTUFBTSxHQUFHLHNCQUFzQjtBQUNyQyxNQUFNQyxPQUFPO0VBQUEsSUFBQUMsSUFBQSxHQUFBQyw4SkFBQSxDQUFHLFdBQU9DLEdBQUcsRUFBRUMsRUFBRSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBSztJQUN2RCxJQUFJSCxHQUFHLElBQUksSUFBSSxJQUFJQSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUNKLE1BQU0sQ0FBQ1EsSUFBSSxDQUFDSixHQUFHLENBQUMsRUFBRTtNQUN0RCxNQUFNSyxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLFlBQVksQ0FBQztNQUNuRCxJQUFJRixNQUFNLEVBQUU7UUFDVixJQUFJSixFQUFFLElBQUksSUFBSSxFQUFFO1VBQ2RBLEVBQUUsQ0FBQ08sY0FBYyxDQUFDLENBQUM7UUFDckI7UUFDQSxPQUFPSCxNQUFNLENBQUNJLElBQUksQ0FBQ1QsR0FBRyxFQUFFRSxTQUFTLEVBQUVDLFNBQVMsQ0FBQztNQUMvQztJQUNGO0lBQ0EsT0FBTyxLQUFLO0VBQ2QsQ0FBQztFQUFBLGdCQVhLTixPQUFPQSxDQUFBYSxFQUFBLEVBQUFDLEdBQUEsRUFBQUMsR0FBQSxFQUFBQyxHQUFBO0lBQUEsT0FBQWYsSUFBQSxDQUFBZ0IsS0FBQSxPQUFBQyxTQUFBO0VBQUE7QUFBQSxHQVdaIiwic291cmNlcyI6WyIuL25vZGVfbW9kdWxlcy9AaW9uaWMvY29yZS9kaXN0L2VzbS9pb24tdGV4dC5lbnRyeS5qcyIsIi4vbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2Rpc3QvZXNtL3RoZW1lLTc2NzAzNDFjLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGgsIEggYXMgSG9zdCB9IGZyb20gJy4vaW5kZXgtMzZhNWZkNzUuanMnO1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVDb2xvckNsYXNzZXMgfSBmcm9tICcuL3RoZW1lLTc2NzAzNDFjLmpzJztcbmltcG9ydCB7IGIgYXMgZ2V0SW9uTW9kZSB9IGZyb20gJy4vaW9uaWMtZ2xvYmFsLWE5YWJkNTY5LmpzJztcblxuY29uc3QgdGV4dENzcyA9IFwiOmhvc3QoLmlvbi1jb2xvcil7Y29sb3I6dmFyKC0taW9uLWNvbG9yLWJhc2UpfVwiO1xuXG5jb25zdCBUZXh0ID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICB0aGlzLmNvbG9yID0gdW5kZWZpbmVkO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBtb2RlID0gZ2V0SW9uTW9kZSh0aGlzKTtcbiAgICByZXR1cm4gKGgoSG9zdCwgeyBjbGFzczogY3JlYXRlQ29sb3JDbGFzc2VzKHRoaXMuY29sb3IsIHtcbiAgICAgICAgW21vZGVdOiB0cnVlLFxuICAgICAgfSkgfSwgaChcInNsb3RcIiwgbnVsbCkpKTtcbiAgfVxufTtcblRleHQuc3R5bGUgPSB0ZXh0Q3NzO1xuXG5leHBvcnQgeyBUZXh0IGFzIGlvbl90ZXh0IH07XG4iLCIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuY29uc3QgaG9zdENvbnRleHQgPSAoc2VsZWN0b3IsIGVsKSA9PiB7XG4gIHJldHVybiBlbC5jbG9zZXN0KHNlbGVjdG9yKSAhPT0gbnVsbDtcbn07XG4vKipcbiAqIENyZWF0ZSB0aGUgbW9kZSBhbmQgY29sb3IgY2xhc3NlcyBmb3IgdGhlIGNvbXBvbmVudCBiYXNlZCBvbiB0aGUgY2xhc3NlcyBwYXNzZWQgaW5cbiAqL1xuY29uc3QgY3JlYXRlQ29sb3JDbGFzc2VzID0gKGNvbG9yLCBjc3NDbGFzc01hcCkgPT4ge1xuICByZXR1cm4gdHlwZW9mIGNvbG9yID09PSAnc3RyaW5nJyAmJiBjb2xvci5sZW5ndGggPiAwXG4gICAgPyBPYmplY3QuYXNzaWduKHsgJ2lvbi1jb2xvcic6IHRydWUsIFtgaW9uLWNvbG9yLSR7Y29sb3J9YF06IHRydWUgfSwgY3NzQ2xhc3NNYXApIDogY3NzQ2xhc3NNYXA7XG59O1xuY29uc3QgZ2V0Q2xhc3NMaXN0ID0gKGNsYXNzZXMpID0+IHtcbiAgaWYgKGNsYXNzZXMgIT09IHVuZGVmaW5lZCkge1xuICAgIGNvbnN0IGFycmF5ID0gQXJyYXkuaXNBcnJheShjbGFzc2VzKSA/IGNsYXNzZXMgOiBjbGFzc2VzLnNwbGl0KCcgJyk7XG4gICAgcmV0dXJuIGFycmF5XG4gICAgICAuZmlsdGVyKChjKSA9PiBjICE9IG51bGwpXG4gICAgICAubWFwKChjKSA9PiBjLnRyaW0oKSlcbiAgICAgIC5maWx0ZXIoKGMpID0+IGMgIT09ICcnKTtcbiAgfVxuICByZXR1cm4gW107XG59O1xuY29uc3QgZ2V0Q2xhc3NNYXAgPSAoY2xhc3NlcykgPT4ge1xuICBjb25zdCBtYXAgPSB7fTtcbiAgZ2V0Q2xhc3NMaXN0KGNsYXNzZXMpLmZvckVhY2goKGMpID0+IChtYXBbY10gPSB0cnVlKSk7XG4gIHJldHVybiBtYXA7XG59O1xuY29uc3QgU0NIRU1FID0gL15bYS16XVthLXowLTkrXFwtLl0qOi87XG5jb25zdCBvcGVuVVJMID0gYXN5bmMgKHVybCwgZXYsIGRpcmVjdGlvbiwgYW5pbWF0aW9uKSA9PiB7XG4gIGlmICh1cmwgIT0gbnVsbCAmJiB1cmxbMF0gIT09ICcjJyAmJiAhU0NIRU1FLnRlc3QodXJsKSkge1xuICAgIGNvbnN0IHJvdXRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lvbi1yb3V0ZXInKTtcbiAgICBpZiAocm91dGVyKSB7XG4gICAgICBpZiAoZXYgIT0gbnVsbCkge1xuICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHVybCwgZGlyZWN0aW9uLCBhbmltYXRpb24pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVDb2xvckNsYXNzZXMgYXMgYywgZ2V0Q2xhc3NNYXAgYXMgZywgaG9zdENvbnRleHQgYXMgaCwgb3BlblVSTCBhcyBvIH07XG4iXSwibmFtZXMiOlsiciIsInJlZ2lzdGVySW5zdGFuY2UiLCJoIiwiSCIsIkhvc3QiLCJjIiwiY3JlYXRlQ29sb3JDbGFzc2VzIiwiYiIsImdldElvbk1vZGUiLCJ0ZXh0Q3NzIiwiVGV4dCIsImNvbnN0cnVjdG9yIiwiaG9zdFJlZiIsImNvbG9yIiwidW5kZWZpbmVkIiwicmVuZGVyIiwibW9kZSIsImNsYXNzIiwic3R5bGUiLCJpb25fdGV4dCIsImhvc3RDb250ZXh0Iiwic2VsZWN0b3IiLCJlbCIsImNsb3Nlc3QiLCJjc3NDbGFzc01hcCIsImxlbmd0aCIsIk9iamVjdCIsImFzc2lnbiIsImdldENsYXNzTGlzdCIsImNsYXNzZXMiLCJhcnJheSIsIkFycmF5IiwiaXNBcnJheSIsInNwbGl0IiwiZmlsdGVyIiwibWFwIiwidHJpbSIsImdldENsYXNzTWFwIiwiZm9yRWFjaCIsIlNDSEVNRSIsIm9wZW5VUkwiLCJfcmVmIiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJ1cmwiLCJldiIsImRpcmVjdGlvbiIsImFuaW1hdGlvbiIsInRlc3QiLCJyb3V0ZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJwcmV2ZW50RGVmYXVsdCIsInB1c2giLCJfeCIsIl94MiIsIl94MyIsIl94NCIsImFwcGx5IiwiYXJndW1lbnRzIiwiZyIsIm8iXSwic291cmNlUm9vdCI6IndlYnBhY2s6Ly8vIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzAsMV19