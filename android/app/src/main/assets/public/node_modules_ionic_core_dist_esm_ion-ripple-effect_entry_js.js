"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js"],{

/***/ 4816:
/*!**********************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_ripple_effect": () => (/* binding */ RippleEffect)
/* harmony export */ });
/* harmony import */ var _Users_ohrionmartin_dev_mining_expo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js */ 1670);
/* harmony import */ var _index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index-be218d70.js */ 9866);
/* harmony import */ var _ionic_global_3b28a225_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ionic-global-3b28a225.js */ 3053);

/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */


const rippleEffectCss = ":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}";
const RippleEffect = class {
  constructor(hostRef) {
    (0,_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.r)(this, hostRef);
    this.type = 'bounded';
  }
  /**
   * Adds the ripple effect to the parent element.
   *
   * @param x The horizontal coordinate of where the ripple should start.
   * @param y The vertical coordinate of where the ripple should start.
   */
  addRipple(x, y) {
    var _this = this;
    return (0,_Users_ohrionmartin_dev_mining_expo_node_modules_babel_runtime_helpers_esm_asyncToGenerator_js__WEBPACK_IMPORTED_MODULE_0__["default"])(function* () {
      return new Promise(resolve => {
        (0,_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.e)(() => {
          const rect = _this.el.getBoundingClientRect();
          const width = rect.width;
          const height = rect.height;
          const hypotenuse = Math.sqrt(width * width + height * height);
          const maxDim = Math.max(height, width);
          const maxRadius = _this.unbounded ? maxDim : hypotenuse + PADDING;
          const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);
          const finalScale = maxRadius / initialSize;
          let posX = x - rect.left;
          let posY = y - rect.top;
          if (_this.unbounded) {
            posX = width * 0.5;
            posY = height * 0.5;
          }
          const styleX = posX - initialSize * 0.5;
          const styleY = posY - initialSize * 0.5;
          const moveX = width * 0.5 - posX;
          const moveY = height * 0.5 - posY;
          (0,_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.w)(() => {
            const div = document.createElement('div');
            div.classList.add('ripple-effect');
            const style = div.style;
            style.top = styleY + 'px';
            style.left = styleX + 'px';
            style.width = style.height = initialSize + 'px';
            style.setProperty('--final-scale', `${finalScale}`);
            style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);
            const container = _this.el.shadowRoot || _this.el;
            container.appendChild(div);
            setTimeout(() => {
              resolve(() => {
                removeRipple(div);
              });
            }, 225 + 100);
          });
        });
      });
    })();
  }
  get unbounded() {
    return this.type === 'unbounded';
  }
  render() {
    const mode = (0,_ionic_global_3b28a225_js__WEBPACK_IMPORTED_MODULE_2__.b)(this);
    return (0,_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.h)(_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.H, {
      role: "presentation",
      class: {
        [mode]: true,
        unbounded: this.unbounded
      }
    });
  }
  get el() {
    return (0,_index_be218d70_js__WEBPACK_IMPORTED_MODULE_1__.f)(this);
  }
};
const removeRipple = ripple => {
  ripple.classList.add('fade-out');
  setTimeout(() => {
    ripple.remove();
  }, 200);
};
const PADDING = 10;
const INITIAL_ORIGIN_SCALE = 0.5;
RippleEffect.style = rippleEffectCss;


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2lvbmljX2NvcmVfZGlzdF9lc21faW9uLXJpcHBsZS1lZmZlY3RfZW50cnlfanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDMEg7QUFDN0Q7QUFFN0QsTUFBTWEsZUFBZSxHQUFHLGc3REFBZzdEO0FBRXg4RCxNQUFNQyxZQUFZLEdBQUcsTUFBTTtFQUN6QkMsV0FBV0EsQ0FBQ0MsT0FBTyxFQUFFO0lBQ25CZixxREFBZ0IsQ0FBQyxJQUFJLEVBQUVlLE9BQU8sQ0FBQztJQUMvQixJQUFJLENBQUNDLElBQUksR0FBRyxTQUFTO0VBQ3ZCO0VBQ0E7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ1FDLFNBQVNBLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxFQUFFO0lBQUEsSUFBQUMsS0FBQTtJQUFBLE9BQUFDLDBJQUFBO01BQ3BCLE9BQU8sSUFBSUMsT0FBTyxDQUFFQyxPQUFPLElBQUs7UUFDOUJyQixxREFBUSxDQUFDLE1BQU07VUFDYixNQUFNc0IsSUFBSSxHQUFHSixLQUFJLENBQUNLLEVBQUUsQ0FBQ0MscUJBQXFCLEVBQUU7VUFDNUMsTUFBTUMsS0FBSyxHQUFHSCxJQUFJLENBQUNHLEtBQUs7VUFDeEIsTUFBTUMsTUFBTSxHQUFHSixJQUFJLENBQUNJLE1BQU07VUFDMUIsTUFBTUMsVUFBVSxHQUFHQyxJQUFJLENBQUNDLElBQUksQ0FBQ0osS0FBSyxHQUFHQSxLQUFLLEdBQUdDLE1BQU0sR0FBR0EsTUFBTSxDQUFDO1VBQzdELE1BQU1JLE1BQU0sR0FBR0YsSUFBSSxDQUFDRyxHQUFHLENBQUNMLE1BQU0sRUFBRUQsS0FBSyxDQUFDO1VBQ3RDLE1BQU1PLFNBQVMsR0FBR2QsS0FBSSxDQUFDZSxTQUFTLEdBQUdILE1BQU0sR0FBR0gsVUFBVSxHQUFHTyxPQUFPO1VBQ2hFLE1BQU1DLFdBQVcsR0FBR1AsSUFBSSxDQUFDUSxLQUFLLENBQUNOLE1BQU0sR0FBR08sb0JBQW9CLENBQUM7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Q0FBQ3lDLEtBQUssR0FBRzFDLGVBQWUiLCJzb3VyY2VzIjpbIi4vbm9kZV9tb2R1bGVzL0Bpb25pYy9jb3JlL2Rpc3QvZXNtL2lvbi1yaXBwbGUtZWZmZWN0LmVudHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogKEMpIElvbmljIGh0dHA6Ly9pb25pY2ZyYW1ld29yay5jb20gLSBNSVQgTGljZW5zZVxuICovXG5pbXBvcnQgeyByIGFzIHJlZ2lzdGVySW5zdGFuY2UsIGUgYXMgcmVhZFRhc2ssIHcgYXMgd3JpdGVUYXNrLCBoLCBmIGFzIGdldEVsZW1lbnQsIEggYXMgSG9zdCB9IGZyb20gJy4vaW5kZXgtYmUyMThkNzAuanMnO1xuaW1wb3J0IHsgYiBhcyBnZXRJb25Nb2RlIH0gZnJvbSAnLi9pb25pYy1nbG9iYWwtM2IyOGEyMjUuanMnO1xuXG5jb25zdCByaXBwbGVFZmZlY3RDc3MgPSBcIjpob3N0e2xlZnQ6MDtyaWdodDowO3RvcDowO2JvdHRvbTowO3Bvc2l0aW9uOmFic29sdXRlO2NvbnRhaW46c3RyaWN0O3BvaW50ZXItZXZlbnRzOm5vbmV9Omhvc3QoLnVuYm91bmRlZCl7Y29udGFpbjpsYXlvdXQgc2l6ZSBzdHlsZX0ucmlwcGxlLWVmZmVjdHtib3JkZXItcmFkaXVzOjUwJTtwb3NpdGlvbjphYnNvbHV0ZTtiYWNrZ3JvdW5kLWNvbG9yOmN1cnJlbnRDb2xvcjtjb2xvcjppbmhlcml0O2NvbnRhaW46c3RyaWN0O29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjoyMjVtcyByaXBwbGVBbmltYXRpb24gZm9yd2FyZHMsIDc1bXMgZmFkZUluQW5pbWF0aW9uIGZvcndhcmRzO2FuaW1hdGlvbjoyMjVtcyByaXBwbGVBbmltYXRpb24gZm9yd2FyZHMsIDc1bXMgZmFkZUluQW5pbWF0aW9uIGZvcndhcmRzO3dpbGwtY2hhbmdlOnRyYW5zZm9ybSwgb3BhY2l0eTtwb2ludGVyLWV2ZW50czpub25lfS5mYWRlLW91dHstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHJhbnNsYXRlLWVuZCkpIHNjYWxlKHZhcigtLWZpbmFsLXNjYWxlLCAxKSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSh2YXIoLS10cmFuc2xhdGUtZW5kKSkgc2NhbGUodmFyKC0tZmluYWwtc2NhbGUsIDEpKTstd2Via2l0LWFuaW1hdGlvbjoxNTBtcyBmYWRlT3V0QW5pbWF0aW9uIGZvcndhcmRzO2FuaW1hdGlvbjoxNTBtcyBmYWRlT3V0QW5pbWF0aW9uIGZvcndhcmRzfUAtd2Via2l0LWtleWZyYW1lcyByaXBwbGVBbmltYXRpb257ZnJvbXstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmN1YmljLWJlemllcigwLjQsIDAsIDAuMiwgMSk7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMSk7dHJhbnNmb3JtOnNjYWxlKDEpfXRvey13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSh2YXIoLS10cmFuc2xhdGUtZW5kKSkgc2NhbGUodmFyKC0tZmluYWwtc2NhbGUsIDEpKTt0cmFuc2Zvcm06dHJhbnNsYXRlKHZhcigtLXRyYW5zbGF0ZS1lbmQpKSBzY2FsZSh2YXIoLS1maW5hbC1zY2FsZSwgMSkpfX1Aa2V5ZnJhbWVzIHJpcHBsZUFuaW1hdGlvbntmcm9tey13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246Y3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKTstd2Via2l0LXRyYW5zZm9ybTpzY2FsZSgxKTt0cmFuc2Zvcm06c2NhbGUoMSl9dG97LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlKHZhcigtLXRyYW5zbGF0ZS1lbmQpKSBzY2FsZSh2YXIoLS1maW5hbC1zY2FsZSwgMSkpO3RyYW5zZm9ybTp0cmFuc2xhdGUodmFyKC0tdHJhbnNsYXRlLWVuZCkpIHNjYWxlKHZhcigtLWZpbmFsLXNjYWxlLCAxKSl9fUAtd2Via2l0LWtleWZyYW1lcyBmYWRlSW5BbmltYXRpb257ZnJvbXstd2Via2l0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO2FuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246bGluZWFyO29wYWNpdHk6MH10b3tvcGFjaXR5OjAuMTZ9fUBrZXlmcmFtZXMgZmFkZUluQW5pbWF0aW9ue2Zyb217LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjtvcGFjaXR5OjB9dG97b3BhY2l0eTowLjE2fX1ALXdlYmtpdC1rZXlmcmFtZXMgZmFkZU91dEFuaW1hdGlvbntmcm9tey13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7YW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjpsaW5lYXI7b3BhY2l0eTowLjE2fXRve29wYWNpdHk6MH19QGtleWZyYW1lcyBmYWRlT3V0QW5pbWF0aW9ue2Zyb217LXdlYmtpdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjthbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOmxpbmVhcjtvcGFjaXR5OjAuMTZ9dG97b3BhY2l0eTowfX1cIjtcblxuY29uc3QgUmlwcGxlRWZmZWN0ID0gY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcihob3N0UmVmKSB7XG4gICAgcmVnaXN0ZXJJbnN0YW5jZSh0aGlzLCBob3N0UmVmKTtcbiAgICB0aGlzLnR5cGUgPSAnYm91bmRlZCc7XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgdGhlIHJpcHBsZSBlZmZlY3QgdG8gdGhlIHBhcmVudCBlbGVtZW50LlxuICAgKlxuICAgKiBAcGFyYW0geCBUaGUgaG9yaXpvbnRhbCBjb29yZGluYXRlIG9mIHdoZXJlIHRoZSByaXBwbGUgc2hvdWxkIHN0YXJ0LlxuICAgKiBAcGFyYW0geSBUaGUgdmVydGljYWwgY29vcmRpbmF0ZSBvZiB3aGVyZSB0aGUgcmlwcGxlIHNob3VsZCBzdGFydC5cbiAgICovXG4gIGFzeW5jIGFkZFJpcHBsZSh4LCB5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICByZWFkVGFzaygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlY3QgPSB0aGlzLmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBjb25zdCB3aWR0aCA9IHJlY3Qud2lkdGg7XG4gICAgICAgIGNvbnN0IGhlaWdodCA9IHJlY3QuaGVpZ2h0O1xuICAgICAgICBjb25zdCBoeXBvdGVudXNlID0gTWF0aC5zcXJ0KHdpZHRoICogd2lkdGggKyBoZWlnaHQgKiBoZWlnaHQpO1xuICAgICAgICBjb25zdCBtYXhEaW0gPSBNYXRoLm1heChoZWlnaHQsIHdpZHRoKTtcbiAgICAgICAgY29uc3QgbWF4UmFkaXVzID0gdGhpcy51bmJvdW5kZWQgPyBtYXhEaW0gOiBoeXBvdGVudXNlICsgUEFERElORztcbiAgICAgICAgY29uc3QgaW5pdGlhbFNpemUgPSBNYXRoLmZsb29yKG1heERpbSAqIElOSVRJQUxfT1JJR0lOX1NDQUxFKTtcbiAgICAgICAgY29uc3QgZmluYWxTY2FsZSA9IG1heFJhZGl1cyAvIGluaXRpYWxTaXplO1xuICAgICAgICBsZXQgcG9zWCA9IHggLSByZWN0LmxlZnQ7XG4gICAgICAgIGxldCBwb3NZID0geSAtIHJlY3QudG9wO1xuICAgICAgICBpZiAodGhpcy51bmJvdW5kZWQpIHtcbiAgICAgICAgICBwb3NYID0gd2lkdGggKiAwLjU7XG4gICAgICAgICAgcG9zWSA9IGhlaWdodCAqIDAuNTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdHlsZVggPSBwb3NYIC0gaW5pdGlhbFNpemUgKiAwLjU7XG4gICAgICAgIGNvbnN0IHN0eWxlWSA9IHBvc1kgLSBpbml0aWFsU2l6ZSAqIDAuNTtcbiAgICAgICAgY29uc3QgbW92ZVggPSB3aWR0aCAqIDAuNSAtIHBvc1g7XG4gICAgICAgIGNvbnN0IG1vdmVZID0gaGVpZ2h0ICogMC41IC0gcG9zWTtcbiAgICAgICAgd3JpdGVUYXNrKCgpID0+IHtcbiAgICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgICBkaXYuY2xhc3NMaXN0LmFkZCgncmlwcGxlLWVmZmVjdCcpO1xuICAgICAgICAgIGNvbnN0IHN0eWxlID0gZGl2LnN0eWxlO1xuICAgICAgICAgIHN0eWxlLnRvcCA9IHN0eWxlWSArICdweCc7XG4gICAgICAgICAgc3R5bGUubGVmdCA9IHN0eWxlWCArICdweCc7XG4gICAgICAgICAgc3R5bGUud2lkdGggPSBzdHlsZS5oZWlnaHQgPSBpbml0aWFsU2l6ZSArICdweCc7XG4gICAgICAgICAgc3R5bGUuc2V0UHJvcGVydHkoJy0tZmluYWwtc2NhbGUnLCBgJHtmaW5hbFNjYWxlfWApO1xuICAgICAgICAgIHN0eWxlLnNldFByb3BlcnR5KCctLXRyYW5zbGF0ZS1lbmQnLCBgJHttb3ZlWH1weCwgJHttb3ZlWX1weGApO1xuICAgICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuZWwuc2hhZG93Um9vdCB8fCB0aGlzLmVsO1xuICAgICAgICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChkaXYpO1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZSgoKSA9PiB7XG4gICAgICAgICAgICAgIHJlbW92ZVJpcHBsZShkaXYpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSwgMjI1ICsgMTAwKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuICBnZXQgdW5ib3VuZGVkKCkge1xuICAgIHJldHVybiB0aGlzLnR5cGUgPT09ICd1bmJvdW5kZWQnO1xuICB9XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBtb2RlID0gZ2V0SW9uTW9kZSh0aGlzKTtcbiAgICByZXR1cm4gKGgoSG9zdCwgeyByb2xlOiBcInByZXNlbnRhdGlvblwiLCBjbGFzczoge1xuICAgICAgICBbbW9kZV06IHRydWUsXG4gICAgICAgIHVuYm91bmRlZDogdGhpcy51bmJvdW5kZWQsXG4gICAgICB9IH0pKTtcbiAgfVxuICBnZXQgZWwoKSB7IHJldHVybiBnZXRFbGVtZW50KHRoaXMpOyB9XG59O1xuY29uc3QgcmVtb3ZlUmlwcGxlID0gKHJpcHBsZSkgPT4ge1xuICByaXBwbGUuY2xhc3NMaXN0LmFkZCgnZmFkZS1vdXQnKTtcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgcmlwcGxlLnJlbW92ZSgpO1xuICB9LCAyMDApO1xufTtcbmNvbnN0IFBBRERJTkcgPSAxMDtcbmNvbnN0IElOSVRJQUxfT1JJR0lOX1NDQUxFID0gMC41O1xuUmlwcGxlRWZmZWN0LnN0eWxlID0gcmlwcGxlRWZmZWN0Q3NzO1xuXG5leHBvcnQgeyBSaXBwbGVFZmZlY3QgYXMgaW9uX3JpcHBsZV9lZmZlY3QgfTtcbiJdLCJuYW1lcyI6WyJyIiwicmVnaXN0ZXJJbnN0YW5jZSIsImUiLCJyZWFkVGFzayIsInciLCJ3cml0ZVRhc2siLCJoIiwiZiIsImdldEVsZW1lbnQiLCJIIiwiSG9zdCIsImIiLCJnZXRJb25Nb2RlIiwicmlwcGxlRWZmZWN0Q3NzIiwiUmlwcGxlRWZmZWN0IiwiY29uc3RydWN0b3IiLCJob3N0UmVmIiwidHlwZSIsImFkZFJpcHBsZSIsIngiLCJ5IiwiX3RoaXMiLCJfYXN5bmNUb0dlbmVyYXRvciIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVjdCIsImVsIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJoeXBvdGVudXNlIiwiTWF0aCIsInNxcnQiLCJtYXhEaW0iLCJtYXgiLCJtYXhSYWRpdXMiLCJ1bmJvdW5kZWQiLCJQQURESU5HIiwiaW5pdGlhbFNpemUiLCJmbG9vciIsIklOSVRJQUxfT1JJR0lOX1NDQUxFIiwiZmluYWxTY2FsZSIsInBvc1giLCJsZWZ0IiwicG9zWSIsInRvcCIsInN0eWxlWCIsInN0eWxlWSIsIm1vdmVYIiwibW92ZVkiLCJkaXYiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzdHlsZSIsInNldFByb3BlcnR5IiwiY29udGFpbmVyIiwic2hhZG93Um9vdCIsImFwcGVuZENoaWxkIiwic2V0VGltZW91dCIsInJlbW92ZVJpcHBsZSIsInJlbmRlciIsIm1vZGUiLCJyb2xlIiwiY2xhc3MiLCJyaXBwbGUiLCJyZW1vdmUiLCJpb25fcmlwcGxlX2VmZmVjdCJdLCJzb3VyY2VSb290Ijoid2VicGFjazovLy8iLCJ4X2dvb2dsZV9pZ25vcmVMaXN0IjpbMF19